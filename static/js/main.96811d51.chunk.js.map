{"version":3,"sources":["components/CurrentLocationMap.jsx","components/MarkerMap.jsx","components/Cards.jsx","components/Search.jsx","components/Main.jsx","components/Login.jsx","Router.js","App.js","serviceWorker.js","index.js"],"names":["mapStyles","position","width","height","CurrentLocation","_React$Component","props","_this","Object","classCallCheck","this","_this$props$initialCe","possibleConstructorReturn","getPrototypeOf","call","initialCenter","lat","lng","state","currentLocation","inherits","createClass","key","value","_this2","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","loadMap","prevProps","prevState","google","recenterMap","maps","mapRef","refs","map","node","ReactDOM","findDOMNode","zoom","_this$state$currentLo","center","LatLng","mapConfig","assign","Map","current","panTo","_this3","children","React","Children","c","cloneElement","mapCenter","style","react_default","a","createElement","ref","renderChildren","Component","defaultProps","visible","MapContainer","_Component","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","onClose","Array","isArray","data","restaurants","i","dist","onClick","name","north","west","id","info","description","category","price","CurrentLocationMap","GoogleApiWrapper","apiKey","Cards","console","log","mdbreact_esm","item","index","size","xs","src","image","alt","concat","raiting","Search","handleChange","event","found","filter","RegExp","search","exec","JSON","stringify","target","dataFiltered","eventSearch","className","type","placeholder","onChange","Main","switchToMap","isMap","switchToCards","handlerSearch","length","bind","assertThisInitialized","view","MarkerMap","components_Cards","components_Search","Login","md","label","icon","group","validate","error","success","react_router_dom","textDecoration","color","to","AppRouter","react_router","exact","path","component","App","Router","Boolean","window","location","hostname","match","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96811d51.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  }\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { lat, lng } = this.props.initialCenter;\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n          const coords = pos.coords;\r\n          this.setState({\r\n            currentLocation: {\r\n              lat: coords.latitude,\r\n              lng: coords.longitude\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    this.loadMap();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      const mapRef = this.refs.map;\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n      let { zoom } = this.props;\r\n      const { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom\r\n        }\r\n      );\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n    }\r\n  }\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n    if (!children) return;\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n    return (\r\n      <div>\r\n        <div style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 17,\r\n  initialCenter: {\r\n    lat: 20.6736,\r\n    lng: -103.344\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\nimport CurrentLocation from \"./CurrentLocationMap\";\r\n \r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    {\r\n      this.state = {\r\n        showingInfoWindow: false, //Hides or the shows the infoWindow\r\n        activeMarker: {}, //Shows the active marker upon click\r\n        selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\r\n        \r\n      };\r\n    }\r\n  }\r\n  \r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    \r\n    const data = (Array.isArray(this.props.data))? this.props.data : this.props.data.restaurants;\r\n    const marker = data.map(i => {\r\n      return (\r\n        <Marker\r\n          onClick={this.onMarkerClick}\r\n          name={i.name}\r\n          position={{ lat: i.north, lng: i.west }}\r\n          key={i.id}\r\n          info= {i.description}\r\n          category = {i.category}\r\n          price = { i.price}\r\n        />\r\n      )\r\n    });\r\n\r\n    return (\r\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}> \r\n        {marker}\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n            <p>{this.state.selectedPlace.info}</p>\r\n            <p>{this.state.selectedPlace.category}</p>\r\n            <p>${this.state.selectedPlace.price}</p>\r\n          </div> \r\n        </InfoWindow>\r\n      </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBrKMm2g8gMfsU_JtKF6fkgdtw1ED3ShgU\"\r\n})(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport '../style/card.css';\r\nimport data from '../data/data.json';\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n// import './index.css';\r\n\r\nclass Cards extends Component {\r\n  \r\n\r\n  render() {\r\n    console.log(this.props.data);\r\n    const data = (Array.isArray(this.props.data))? this.props.data : this.props.data.restaurants;\r\n    return (\r\n      <div>\r\n        <MDBContainer>\r\n          {data.map((item, index) => (\r\n            <div key={index}>\r\n              <MDBRow>\r\n                <MDBCol size=\"4\" xs=\"4\">\r\n                  <div>\r\n                    <img\r\n                      src={item.image}\r\n                      alt=\"icon-btn\"\r\n                      style={{ height: `${4.5}rem`, width: `${4.5}rem` }}\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol size=\"6\" xs=\"6\">\r\n                  <h6>{item.name}</h6>\r\n                  <p>{item.description}</p>\r\n                </MDBCol>\r\n                <MDBCol size=\"2\" xs=\"2\">\r\n                  <span>{item.raiting}</span> <br />\r\n                  <span>${item.price}</span>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          ))}\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data/data.json\";\r\n\r\nclass Search extends Component {\r\n constructor(props) {\r\n   super(props);\r\n   {\r\n     this.state = {\r\n       dataFiltered: data\r\n     };\r\n   }\r\n }\r\n handleChange = event => {\r\n   \r\n  let found =  data.restaurants.filter(i =>\r\n    new RegExp(this.state.search, \"i\").exec(JSON.stringify(i))\r\n  );\r\n\r\n  \r\n   this.setState({\r\n     search: event.target.value,\r\n     dataFiltered: found\r\n   });\r\n\r\n   this.props.eventSearch(found);\r\n };\r\n render() {\r\n   //console.log(this.state.dataFiltered);\r\n   return (\r\n     <div className=\"searchBar\">\r\n       <input\r\n         type=\"text\"\r\n         placeholder=\"Search..\"\r\n         value={this.state.search}\r\n         onChange={this.handleChange}\r\n       />\r\n     </div>\r\n   );\r\n }\r\n}\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport MarkerMap from \"./MarkerMap\";\r\nimport Cards from './Cards';\r\nimport Search from './Search';\r\nimport data from \"../data/data.json\";\r\n\r\nclass Main extends Component {\r\n constructor(props) {\r\n   super(props);\r\n   this.switchToCards = this.switchToCards.bind(this);\r\n   this.switchToMap = this.switchToMap.bind(this);\r\n   this.state = {\r\n     isMap: false,\r\n    data: data\r\n   };\r\n }\r\n switchToMap = () => {\r\n   this.setState({ isMap:  true});\r\n };\r\n\r\n switchToCards = () => {\r\n  this.setState({ isMap:  false});\r\n};\r\n\r\nhandlerSearch = (found) =>{\r\n  this.setState({ data:  (found.length)? found : data});\r\n}\r\n\r\n render() {\r\n console.log(this.state.data)\r\n   const isMap = this.state.isMap;\r\n   let view;\r\n   if (isMap){\r\n       view = <MarkerMap data={this.state.data}></MarkerMap>\r\n   }\r\n   else{\r\n       view = <Cards data={this.state.data}></Cards>\r\n   }\r\n   return (\r\n     <div>\r\n       <header><Search eventSearch={this.handlerSearch} ></Search></header>\r\n       <button onClick = {this.switchToCards}>Cards </button>\r\n       <button onClick={this.switchToMap} >Map</button>\r\n       <section>{view}</section>\r\n       <footer>Footer</footer>\r\n     </div>\r\n   );\r\n }\r\n}\r\nexport default Main;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <form>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn>\r\n                \r\n              </MDBBtn>\r\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/app\">About</Link>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/app\" component={Main} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","\r\n import React from 'react';\r\n import Main from './components/Main';\r\n import Router from './Router'\r\n\r\nfunction App() {\r\n return (\r\n   <div className=\"App\">\r\n     \r\n       <Router></Router>\r\n     \r\n   </div>\r\n );\r\n} \r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}